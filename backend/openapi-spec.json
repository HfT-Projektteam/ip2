{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/signIn": {
      "post": {
        "operationId": "AppController_signIn",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/search": {
      "get": {
        "operationId": "UsersController_searchMany",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/followings/{following_id}": {
      "post": {
        "operationId": "UsersController_follow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "following_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "UsersController_getIfFollow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "following_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/follower": {
      "get": {
        "operationId": "UsersController_getFollower",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/followings": {
      "get": {
        "operationId": "UsersController_getFollowings",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/posts": {
      "get": {
        "operationId": "UsersController_getPosts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/posts/{id}/like": {
      "put": {
        "operationId": "PostsController_like",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns true if the post was liked, false if the like was removed"
          }
        },
        "tags": [
          "posts"
        ]
      },
      "get": {
        "operationId": "PostsController_getLike",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns true if the post is liked by the user, false if not"
          }
        },
        "tags": [
          "posts"
        ]
      }
    },
    "/posts/{id}/dislike": {
      "put": {
        "operationId": "PostsController_dislike",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns true if the post was disliked, false if the dislike was removed"
          }
        },
        "tags": [
          "posts"
        ]
      },
      "get": {
        "operationId": "PostsController_getDislike",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns true if the post is disliked by the user, false if not"
          }
        },
        "tags": [
          "posts"
        ]
      }
    },
    "/posts/genre": {
      "get": {
        "operationId": "PostsController_getTopGenre",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "posts"
        ]
      }
    },
    "/posts": {
      "post": {
        "operationId": "PostsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "posts"
        ]
      },
      "get": {
        "operationId": "PostsController_findAll",
        "parameters": [
          {
            "name": "genre",
            "required": false,
            "in": "query",
            "description": "comma seperated list of genres",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "comma seperated list of genres",
            "schema": {
              "enum": [
                "likes",
                "dislikes",
                "newest",
                "oldest"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "posts"
        ]
      }
    },
    "/posts/follower": {
      "get": {
        "operationId": "PostsController_findAllFollowerFeed",
        "parameters": [
          {
            "name": "genre",
            "required": false,
            "in": "query",
            "description": "comma seperated list of genres",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "comma seperated list of genres",
            "schema": {
              "enum": [
                "likes",
                "dislikes",
                "newest",
                "oldest"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "posts"
        ]
      }
    },
    "/posts/{id}": {
      "get": {
        "operationId": "PostsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostDto"
                }
              }
            }
          }
        },
        "tags": [
          "posts"
        ]
      },
      "patch": {
        "operationId": "PostsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "posts"
        ]
      },
      "delete": {
        "operationId": "PostsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "posts"
        ]
      }
    }
  },
  "info": {
    "title": "Friendify Backend Service",
    "description": "",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "spotify",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "UserDto": {
        "type": "object",
        "properties": {
          "spotify_uri": {
            "type": "string",
            "description": "The URI of a spotify user, which used this service"
          }
        },
        "required": [
          "spotify_uri"
        ]
      },
      "CreatePostDto": {
        "type": "object",
        "properties": {
          "song_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          }
        },
        "required": [
          "song_id",
          "description",
          "genre"
        ]
      },
      "GetPostDto": {
        "type": "object",
        "properties": {
          "songId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserDto"
          },
          "uuid": {
            "type": "string"
          },
          "uploaded": {
            "format": "date-time",
            "type": "string",
            "description": "Time uploaded in ISO 8601",
            "example": "2023-06-19T17:42:46.358Z"
          },
          "likes": {
            "type": "number"
          },
          "dislikes": {
            "type": "number"
          }
        },
        "required": [
          "songId",
          "description",
          "genre",
          "creator",
          "uuid",
          "uploaded",
          "likes",
          "dislikes"
        ]
      },
      "UpdatePostDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        },
        "required": [
          "description"
        ]
      }
    }
  }
}