/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: operations['AppController_getHello']
  }
  '/signIn': {
    post: operations['AppController_signIn']
  }
  '/users': {
    get: operations['UsersController_findAll']
    post: operations['UsersController_create']
  }
  '/users/{id}/search': {
    get: operations['UsersController_searchMany']
  }
  '/users/{id}': {
    get: operations['UsersController_findOne']
    delete: operations['UsersController_remove']
  }
  '/users/{id}/followings/{following_id}': {
    get: operations['UsersController_getIfFollow']
    post: operations['UsersController_follow']
  }
  '/users/{id}/follower': {
    get: operations['UsersController_getFollower']
  }
  '/users/{id}/followings': {
    get: operations['UsersController_getFollowings']
  }
  '/users/{id}/posts': {
    get: operations['UsersController_getPosts']
  }
  '/posts': {
    get: operations['PostsController_findAll']
    post: operations['PostsController_create']
  }
  '/posts/{id}': {
    get: operations['PostsController_findOne']
    delete: operations['PostsController_remove']
    patch: operations['PostsController_update']
  }
  '/posts/{id}/like': {
    put: operations['PostsController_like']
  }
  '/posts/{id}/dislike': {
    put: operations['PostsController_dislike']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    UserDto: {
      /** @description The URI of a spotify user, which used this service */
      spotify_uri: string
    }
    CreatePostDto: Record<string, never>
    UpdatePostDto: Record<string, never>
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type external = Record<string, never>

export interface operations {
  AppController_getHello: {
    responses: {
      200: never
    }
  }
  AppController_signIn: {
    responses: {
      201: never
    }
  }
  UsersController_findAll: {
    parameters: {
      query?: {
        page?: number
        take?: number
      }
    }
    responses: {
      200: never
    }
  }
  UsersController_create: {
    requestBody: {
      content: {
        'application/json': components['schemas']['UserDto']
      }
    }
    responses: {
      201: never
    }
  }
  UsersController_searchMany: {
    parameters: {
      query?: {
        page?: number
        take?: number
      }
      path: {
        id: string
      }
    }
    responses: {
      200: never
    }
  }
  UsersController_findOne: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      200: never
    }
  }
  UsersController_remove: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      200: never
    }
  }
  UsersController_getIfFollow: {
    parameters: {
      path: {
        id: string
        following_id: string
      }
    }
    responses: {
      200: never
    }
  }
  UsersController_follow: {
    parameters: {
      path: {
        id: string
        following_id: string
      }
    }
    responses: {
      201: never
    }
  }
  UsersController_getFollower: {
    parameters: {
      query?: {
        page?: number
        take?: number
      }
      path: {
        id: string
      }
    }
    responses: {
      200: never
    }
  }
  UsersController_getFollowings: {
    parameters: {
      query?: {
        page?: number
        take?: number
      }
      path: {
        id: string
      }
    }
    responses: {
      200: never
    }
  }
  UsersController_getPosts: {
    responses: {
      200: never
    }
  }
  PostsController_findAll: {
    responses: {
      200: never
    }
  }
  PostsController_create: {
    requestBody: {
      content: {
        'application/json': components['schemas']['CreatePostDto']
      }
    }
    responses: {
      201: never
    }
  }
  PostsController_findOne: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      200: never
    }
  }
  PostsController_remove: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      200: never
    }
  }
  PostsController_update: {
    parameters: {
      path: {
        id: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdatePostDto']
      }
    }
    responses: {
      200: never
    }
  }
  PostsController_like: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      200: never
    }
  }
  PostsController_dislike: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      200: never
    }
  }
}
